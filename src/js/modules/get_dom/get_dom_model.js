;

'use strict';

console.log('get_dom.model start');

var get_dom = {
    model: {},
    view: {},
    events: {},
    controller: {},
    init: function() {}
}

get_dom.model = {
	global_zones:[ //вектор доступных зон
	    'ru',
	    'рф',
	    'su'
	],
	transliterate:function(word, back) {


	    word = word.replace(/[|&;$%@"<>()+,_=.' ]/g, "").toLowerCase(); //чоищаем слвоо от символов не подходящих для доменного имени

	    var answer = "",
	        a = {}; //описание "ответа" и объекта -словаря. Сверху вниз описаны от высшего до низшего приоритета на замену в слове. 

	    a["Щ"] = "SCH";
	    a["щ"] = "sch";
	    a["ю"] = "yu";
	    a["Ю"] = "YU";
	    a["ч"] = "ch";
	    a["я"] = "ya";
	    a["Я"] = "Ya";
	    a["Ч"] = "CH";
	    a["ж"] = "zh";
	    a["Ж"] = "ZH";
	    a["ё"] = "yo";
	    a["Ё"] = "YO";
	    a["Ц"] = "TS";
	    a["ц"] = "ts";
	    a["Ш"] = "SH";
	    a["ш"] = "sh";
	    a["И"] = "I";
	    a["и"] = "i";
	    a["Й"] = "Y";
	    a["У"] = "U";
	    a["К"] = "K";
	    a["Е"] = "E";
	    a["Н"] = "N";
	    a["Г"] = "G";
	    a["З"] = "Z";
	    a["Х"] = "H";
	    a["й"] = "y";
	    a["у"] = "u";
	    a["к"] = "k";
	    a["е"] = "e";
	    a["н"] = "n";
	    a["г"] = "g";
	    a["з"] = "z";
	    a["х"] = "h";
	    a["Ф"] = "F";
	    a["Ы"] = "I";
	    a["В"] = "V";
	    a["А"] = "A";
	    a["П"] = "P";
	    a["Р"] = "R";
	    a["О"] = "O";
	    a["Л"] = "L";
	    a["Д"] = "D";
	    a["Э"] = "E";
	    a["ф"] = "f";
	    a["ы"] = "i";
	    a["в"] = "v";
	    a["а"] = "a";
	    a["п"] = "p";
	    a["р"] = "r";
	    a["о"] = "o";
	    a["л"] = "l";
	    a["д"] = "d";
	    a["э"] = "e";
	    a["С"] = "S";
	    a["М"] = "M";
	    a["Т"] = "T";
	    a["Б"] = "B";
	    a["с"] = "s";
	    a["м"] = "m";
	    a["т"] = "t";
	    a["б"] = "b";
	    a['і'] = 'i';
	    a['І'] = 'I';
	    a["Ъ"] = " ";
	    a["ъ"] = " ";
	    a["Ь"] = " ";
	    a["ь"] = " ";

	    if (back) { //если обратная транскрибация
	        answer = word; //приравниваем в ответ входящее слово
	        for (i in a) { //производим цикл пов сем ключам объекта-словаря
	            if (a.hasOwnProperty(i)) {

	                if (answer.indexOf(a[i]) > -1) { //если в ответе содержится искомый символ

	                    answer = answer.replace(new RegExp(a[i], 'g'), i); //заменяем все совпадения в ответе
	                }
	            }
	        }


	    } else { //если обычная транскрибация
	        for (i in word) { //цикл по буквам в входящем слове
	            if (word.hasOwnProperty(i)) {
	                if (a[word[i]] === undefined) { //если в объекте-словре нет ключа равному букве в входящем слове
	                    answer += word[i]; //добавляем букву как есть
	                } else {
	                    answer += a[word[i]]; //если есть соответсвие - добавляем символы соответсвия
	                }
	            }
	        }
	    }

	    answer = answer.replace(/[|&;$%@"<>()+,_=.' ]/g, "").toLowerCase(); //повторная очистка доменного имени от "не валидных" символов

	    return answer; //возвращаем ответ
	},


};
